IDE(통합 개발 환경) Integrated Development Environment
통합된 개발 환경으로, 개발자를 위한 종합 프로그램을 말한다. 쉽게 말해 개발 도구 모읍집이라고 보면 된다.
마치 컨텐츠 디자이너가 포토샵, 일러스트레이터 같은 프로그램을 사용하듯, 개발자들도 개발을 할 때는 여러 프로그램을 사용하게 된다.
코드를 작성하기 위한 텍스트 에디터(Text Editor)
작성한 코드를 실행하기 위한 빌더(Builder)
작성한 코드에 문제가 없는지 체크해주는 디버거(Debugger)
개발 시에 여러가지 프로그램을 따로 사용하면 프로그램들을 연결하기 위해 복잡한 과정을 거쳐야 한다. 그래서 이러한 과정들을 한데 모아 사용하는 것이 IDE(통합 개발 환경)이다. 대표적인 툴로 VS CODE, Xcode, Eclipse, jetvrains series가 있다.

VCS Version Control System
VCS는 Version Control System의 약자로 파일의 변화를 추적하고 관리하는 시스템이다. VCS를 사용하면 각 파일을 이전 상태로 되돌릴 수 있고, 프로젝트를 통째로 이전 상태로 되돌리거나 시간에 따라 수정 내용을 비교해 볼 수도 있다. 누가 문제를 일으켰는지 추적할 수 있고 누가 언제 만들어낸 이슈 인지도 알 수 있다. 또한 파일을 삭제하거나 잘못 고쳤을 때도 쉽게 복구할 수 있다.

로컬 버전 관리 (LVCS - Local VCS)
로컬 버전 관리는 로컬 컴퓨터의 간단한 데이터베이스를 사용해서 파일의 변경 정보를 관리한다. 즉, 하나의 로컬 컴퓨터에서 파일을 관리하는 방식으로 동작한다.

중앙집중식 버전 관리(CVCS - Centralized Version Control System)
중앙집중식 버전 관리는 과거에 주로 사용되던 VCS방식 중 하나이다. 이 방식은 파일들을 오직 서버에만 저장하고 프로젝트의 참여자들은 작업을 진행할 때 서버로부터 프로젝트의 파일들을 내려받은 후 수정하여 다시 서버로 올리는 방식이다.
프로젝트 파일이 서버 한 곳에만 위치해 있으므로 파일의 버전이 일관적이며 관리자는 서버의 파일만 신경쓰면 되므로 관리하기 편하다는 장점이 있다.
하지만 이게 CVCS의 큰 단점이기도 하다.
서버에만 의존하고 있는 형태이기 때문에 네트워크에 문제가 생길 경우 개발자들은 파일을 받지도 올ㄹ지도 못하므로 프로젝트를 진행할 수 없고 만약 서버의 DB에 문제가 생겨 프로젝트의 파일들을 잃어버리게 된다면 복구할 수 없다.

DVCS(분산형 버전 관리)(DVCS - Distributed Version Control System)
분산형 버전 관리 시스템은 현재 VCS 중 가장 유명한 Git이 사용하고 있는 방식으로 프로젝트의 전체 파일이 참여자들의 각 컴퓨터와 서버에 분산되어 저장된다. 먼저 로컬 저장소(참여자들의 각 컴퓨터 디스크)에 프로젝트 파일들을 1차적으로 저장하고 사용자의 명령에 따라 Github, Bitbucket과 같은 원격 저장소(서버 저장소)에도 저장할 수 있다.
파일을 서버와 각 참여자들의 컴퓨터에 분산하여 저장할 수 있기 때문에 어느 한쪽에 문제가 생겨 파일이 손상되거나 히스토리가 지워지더라도 다른 쪽에서 받아오면 되기 때문에 쉽게 복구할 수 있다. 만약 네트워크 문제로 원격 저장소와 통신이 되지 않는다면 각 참여자들끼리 로컬 저장소 내의 파일들을 다양한 방법(이메일 등)으로 주고 받을 수 있어 프로젝트를 계속 진행할 수 있다. DVCS에서는 원격 저장소에 저장하는 것이 필수가 아닌 선택사항이고 로컬 저장소에 먼저 저장한 뒤에 명령이 가능하기 때문에 개발자의 실수로 잘못 커밋을 했더라도 원격 저장소로 올리기 전이었다면 다른 개발자들에 영향을 주지 않고 수정 할 수 있다.